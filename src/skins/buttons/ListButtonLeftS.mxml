<?xml version="1.0" encoding="utf-8"?>
<!-- http://blog.flexexamples.com/2009/07/28/displaying-icons-in-a-spark-buttonbar-control-in-flex-4/ -->
<s:SparkSkin name="MoreUserButtonSkin"
             xmlns:fx="http://ns.adobe.com/mxml/2009"
             xmlns:s="library://ns.adobe.com/flex/spark"
             xmlns:mx="library://ns.adobe.com/flex/mx"
             minWidth="21" minHeight="21"
             creationComplete="init();"
             alpha.disabled="0.3"
        >

    <!-- states -->
    <s:states>
        <s:State name="up" enterState="changeMatrix(false);"/>
        <s:State name="over" enterState="changeMatrix(true);"/>
        <s:State name="down" enterState="changeMatrix(true);"/>
        <s:State name="disabled" enterState="changeMatrix(false);"/>
    </s:states>

    <!-- host component -->
    <fx:Metadata>
		<![CDATA[
        [HostComponent("components.common.flexcomponents.CloseButton")]
        ]]>
	</fx:Metadata>

    <s:transitions>

        <s:Transition toState="over">
            <s:Fade target="{imagesGroup}" alphaFrom="0.8" alphaTo="1" duration="200"/>
        </s:Transition>


        <s:Transition toState="up">
            <s:Fade target="{imagesGroup}" alphaFrom="1" alphaTo="0.8" duration="200"/>
        </s:Transition>

    </s:transitions>

    <fx:Script>
		<![CDATA[
        import components.common.utils.adjustcolor.Color
        import components.common.utils.adjustcolor.ColorMatrix
        import components.common.utils.adjustcolor.ColorMatrixObject

        /* Define the skin elements that should not be colorized.
         For toggle button, the graphics are colorized but the label is not. */
        static private const exclusions:Array = [];

        override public function get colorizeExclusions():Array {
            return exclusions;
        }

        [Bindable]
        private var scale:Number = 1;

        // may be need color matrix filter

        private function init():void {
            var matrix:Matrix = imagesGroup.transform.matrix;
            matrix.a = -1;
            matrix.tx = imagesGroup.width + imagesGroup.x;
            imagesGroup.transform.matrix = matrix;

//				var cm:ColorMatrix = new ColorMatrix();
//				var cmo:ColorMatrixObject = new ColorMatrixObject(50, 2)//,null,0,new Color(80,60,0));
//				cm.applyColorMatrixObject(cmo);
//				
//				imagesGroup.filters = [cm.filter];

        }

        private function changeMatrix(up:Boolean):void {
            if (up) {
                var cm:ColorMatrix = new ColorMatrix();
                var cmo:ColorMatrixObject = new ColorMatrixObject(50, 3, null, 0, new Color(120, 60, 0))//,null,0,new Color(80,60,0));
                cm.applyColorMatrixObject(cmo);

                imagesGroup.filters = [cm.filter];
            } else {
                imagesGroup.filters = [];
            }
        }
        ]]>
	</fx:Script>


    <s:Group id="imagesGroup" alpha="0.8">
        <s:BitmapImage source="@Embed(source='assets/commonbuttons/pageButtonRight.png')"
                       smooth="true"
                />

    </s:Group>


    <s:Label id="labelDisplay"
             visible="false"
            />


</s:SparkSkin>