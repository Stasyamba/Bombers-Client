<?xml version="1.0" encoding="utf-8"?>
<!-- http://blog.flexexamples.com/2009/07/28/displaying-icons-in-a-spark-buttonbar-control-in-flex-4/ -->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
             xmlns:s="library://ns.adobe.com/flex/spark"
             xmlns:mx="library://ns.adobe.com/flex/mx"
             minWidth="21" minHeight="21"
             creationComplete="init();"
             alpha.disabled="0.5"
        >

    <!-- states -->
    <s:states>
        <s:State name="up"/>
        <s:State name="over"/>
        <s:State name="down"/>
        <s:State name="disabled"/>
    </s:states>

    <!-- host component -->
    <fx:Metadata>
		<![CDATA[
        [HostComponent("components.common.flexcomponents.TextButton")]
        ]]>
	</fx:Metadata>

    <fx:Script>
		<![CDATA[
        /* Define the skin elements that should not be colorized.
         For toggle button, the graphics are colorized but the label is not. */
        static private const exclusions:Array = [];

        override public function get colorizeExclusions():Array {
            return exclusions;
        }


        [Bindable]
        private var fontColorUp:uint;

        [Bindable]
        private var fontColorOver:int;

        [Bindable]
        private var text:String = "";

        [Bindable]
        private var fontSize:int;
        [Bindable]
        private var fontFamily:String = "";

        private function init():void {

            fontColorUp = hostComponent.fontColorUp;
            fontColorOver = hostComponent.fontColorOver;

            text = hostComponent.text;

            fontFamily = hostComponent.fontFamily;
            fontSize = hostComponent.textFontSize;
        }
        ]]>
	</fx:Script>


    <s:Label id="labelDisplay"
             visible="true"
             color.over="{fontColorOver}" color.up="{fontColorUp}" color.down="{fontColorUp}"
             fontFamily="{fontFamily}"
             fontSize="{fontSize}"
             text="{text}"
            />


</s:SparkSkin>