<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:chest="components.wall.chest.*"
		 width="100%" height="100%"
		 creationComplete="init();" 
		 xmlns:buttons="skins.buttons.*" xmlns:flexcomponents="components.common.flexcomponents.*"
		 >
	<fx:Script>
		<![CDATA[
			import skins.buttons.Pattern3ButtonS;
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import api.vkontakte.VkontakteGlobals;
			import appmodel.ApplicationModel;
			import flash.net.navigateToURL;
			import engine.utils.greensock.TweenMax;
			import flash.utils.getTimer;
			import mx.utils.ObjectUtil;
			import mx.controls.Alert;
			import components.common.resources.ResourcePrice;
			
			[Bindable]
			private var tryCount: int = 2;
			
			[Bindable]
			private var labelVisble: Boolean = true;
			[Bindable]
			private var buttonPanel1Visible: Boolean = false;
			[Bindable]
			private var buttonPanel2Visible: Boolean = false;
			
			private var rp:ResourcePrice = null;
			
			public static const MUST_WIN:int = 0;
			public static const MUST_LOOSE:int = 1;
			public static const RANDOM:int = 2;
			
			//private var userId: String = "";
			
			public function initContent(rp:ResourcePrice): void
			{
				this.rp = rp;
			}
			
			private function init(): void
			{
				Context.Model.addCustomListener(ContextEvent.WALL_TRY_COUNT_CHANGED, function (e: ContextEvent): void
				{
					buttonPanel1Visible = false;
					buttonPanel2Visible = false;
					labelVisble = false;
					
					tryCount = Context.Model.currentSettings.lotteryTryToWinCount;
					if(tryCount == 0)
					{
						if(Context.Model.currentSettings.lotteryPresentFinded != null)
						{
							buttonPanel1Visible = true;
						}else
						{
							buttonPanel2Visible = true;
						}
					}else
					{
						labelVisble = true;
					}
				});
				
				
				Context.Model.addCustomListener(ContextEvent.WALL_FAST_LOGINED, function (e: ContextEvent): void
				{
					if(rp != null)
					{
						chests.initContent(rp, e.data);
						Context.Model.currentSettings.lotteryTryToWinCount = tryCount;
					}
				});
				
				
				// get response from server
                Context.gameServer.connected.addOnce(function():void{
                    Context.gameServer.login(Context.Model.viewer.id, Context.Model.viewer.id)
                });
					
                Context.gameServer.connectWall();

			}
			
			private function getPresent(): void
			{
				Context.gameServer.wall_sendSubmitPrice();
				TweenMax.delayedCall(1500, function(): void
				{
					VkontakteGlobals.wrapper.external.navigateToURL(new URLRequest(ApplicationModel.APPLICATION_LINK));
				});
			}
			
			private function navigateToGame(): void
			{
				VkontakteGlobals.wrapper.external.navigateToURL(new URLRequest(ApplicationModel.APPLICATION_LINK));
			}
			
		]]>
	</fx:Script>
	
	
	<s:VGroup width="100%" height="100%"
			  horizontalAlign="center" verticalAlign="middle">
		
		<s:VGroup horizontalAlign="center" gap="10">
			<s:HGroup verticalAlign="middle">
				<mx:Image source="http://www.vensella.ru/eg/wallFuryJoe.png"
						  smoothBitmapContent="true" trustContent="{Context.Model.trustContent}"
						  />
				<s:Label text="Отвечай! в каком из сундуков спрятаны сокровища? Я ведь и укусить могу.." 
						 color="0xffe7b3" fontFamily="mpbc" fontSize="30" 
						 maxWidth="379"
						 />
			</s:HGroup>
			
			<chest:Chests id="chests" />
		</s:VGroup>
		
		<s:Group>
			
			<s:HGroup width="100%" height="100%"
					  horizontalAlign="center" verticalAlign="middle"
					  visible="{labelVisble}"
					  >
				<s:Label id="tryCountLabel" text="Осталось попыток: {tryCount}"
						 color="0xffe7b3" fontFamily="mpbc" fontSize="18" 
						 maxWidth="379"
						 />
			</s:HGroup>
			
			<s:HGroup width="100%" height="100%"
					  horizontalAlign="center" verticalAlign="middle"
					  visible="{buttonPanel1Visible}"
					  >
				<flexcomponents:PatternButton skinClass="skins.buttons.Pattern3ButtonS"
											  customLabel="Поделить приз"
											  click="getPresent();"
											  />
			</s:HGroup>
			
			<s:HGroup width="100%" height="100%"
					  horizontalAlign="center" verticalAlign="middle"
					  visible="{buttonPanel2Visible}"
					  >
				<flexcomponents:PatternButton skinClass="skins.buttons.Pattern3ButtonS"
											  customLabel="Всех порву!"
											  click="navigateToGame();"
											  />
			</s:HGroup>
			
		</s:Group>
		
		
	</s:VGroup>
	
	
	
</s:Group>
