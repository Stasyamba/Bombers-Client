<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="366" height="147"
		 >
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import components.common.resources.ResourceObject;
			import components.common.resources.ResourcePrice;
			
			import mx.collections.ArrayCollection;
			
			[Bindable]
			private var chestsCollection:ArrayCollection = new ArrayCollection();
			
			public function initContent(rp: ResourcePrice, type: int):void
			{
				chestReset(rp, type);
			}
			
			private function chestReset(rp: ResourcePrice, type: int): void
			{
				chestsCollection = new ArrayCollection();
				var arr:Array = rp.getResourceObjectArr();
				
				for(var i: int = 0; i<= 9; i++)
				{
					chestsCollection.addItem(new ChestObject(false, null));
				}
				
				if(type != WallChest.MUST_LOOSE)
				{
					var workIndexes: Array = new Array();
					
					function checkInArray(index: int): Boolean
					{
						var res: Boolean = false;
						for each(var index: int in workIndexes)
						{
							if(r == index)
							{
								res = true;
								break;
							}
						}
						
						return res;
					}
					
					if(type == WallChest.RANDOM)
					{
						for each(var ro:ResourceObject in arr) 
						{
							if (ro.value > 0) 
							{
								var r: int = Math.round(Math.random()*10);
								if(r == 10) r = 0;
								
								while(checkInArray(r))
								{
									r = Math.round(Math.random()*10);
									if(r == 10) r = 0;
								}
								
								(chestsCollection[r] as ChestObject).price = ro.clone();
								workIndexes.push(r);
							}
						}
					}else if(type == WallChest.MUST_WIN)
					{
						var ind: Array = [0,1];
						r = Math.round(Math.random()*3);
						if(r == 3) r = 0;
						
						var startIndex: int = Math.round(Math.random()*(chestsCollection.length - 1));
						
						for(i = startIndex; i<= startIndex+chestsCollection.length - 1 - ind[r]; i++) 
						{
							var realI: int;
							
							if(i >= startIndex+chestsCollection.length)
							{
								realI = i - chestsCollection.length ;
							}else
							{
								realI = i;
							}
							
							var r1: int = Math.round(Math.random()*2);
							if(r1 == 2) r1 = 0;
							
							(chestsCollection[realI] as ChestObject).price = arr[r1].clone();
						}
						
					}
						
				}
				
				chestsCollection.refresh();
			}
			
		]]>
	</fx:Script>
	
	<s:List itemRenderer="components.wall.chest.ChestIR" dataProvider="{chestsCollection}"
			contentBackgroundAlpha="0" borderVisible="false"
			width="390">
		<s:layout>
			<s:TileLayout columnAlign="justifyUsingWidth" requestedRowCount="2" requestedColumnCount="5" />
		</s:layout>
	</s:List>
	
</s:Group>
