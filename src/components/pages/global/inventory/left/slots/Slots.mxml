<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         creationComplete="init();">

    <fx:Declarations>
        <!-- Place non-visual elements (e.g., services, value objects) here -->
    </fx:Declarations>

    <fx:Script>
		<![CDATA[
		import components.common.items.ItemProfileObject;
		import components.common.items.categories.ItemCategory;
		
		import mx.collections.ArrayCollection;

		public static const	QUEST_ITEMS_STATE: int = 0;
		public static const OTHER_ITEMS_STATE: int = 1;
			
        [Bindable]
        private var itemsCollection:ArrayCollection = new ArrayCollection();
		private var currentSlotsState: int = OTHER_ITEMS_STATE;
			
        private function init():void {
            initContent();

            Context.Model.addCustomListener(ContextEvent.GP_GOTITEMS_IS_CHANGED, function(e:ContextEvent):void {
                initContent();
            });
        }

        private function initContent():void {
            itemsCollection = new ArrayCollection();
			var allowedItemCategories: Array = [ItemCategory.AURA, ItemCategory.METAMORPH, ItemCategory.WEAPON];
			
			switch(currentSlotsState)
			{
				case QUEST_ITEMS_STATE:
					allowedItemCategories = [ItemCategory.QUEST_ITEM];
					break;
				case OTHER_ITEMS_STATE:
					allowedItemCategories = [ItemCategory.AURA, ItemCategory.METAMORPH, ItemCategory.WEAPON];
					break;
			}
			
            for each(var io:ItemProfileObject in Context.Model.currentSettings.gameProfile.packItems) 
			{
				var currentItemCategory: ItemCategory = Context.Model.itemsCategoryManager.getItemCategory(io.itemType);
				
				var itemIsAllow:Boolean = false;
				for each(var ic: ItemCategory in allowedItemCategories)
				{
					if(ic == currentItemCategory)
					{
						itemIsAllow = true;
						break;
					}
				}
				
				if(itemIsAllow)
				{
                	itemsCollection.addItem(io);
				}
            }

            itemsCollection.refresh();

            //mx.controls.Alert.show(itemsCollection.length.toString());
        }
			
		private function switchSlotState(state: int): void
		{
			if(state != currentSlotsState)
			{
				currentSlotsState = state;
				initContent();
			}
		}
			
        ]]>
	</fx:Script>

    <s:Group>
        <s:BitmapImage source="@Embed(source='assets/windows/global/inventory/packBG.jpg')"
                       width="243" height="202"
                />
        <s:VGroup width="100%" height="202">
            <s:HGroup width="100%" height="181"
                      verticalAlign="top" horizontalAlign="left">

                <s:List dataProvider="{itemsCollection}"
                        itemRenderer="components.pages.global.inventory.left.slots.ItemPackIR"
                        contentBackgroundAlpha="0" borderVisible="false"
                        >
                    <s:layout>
                        <s:TileLayout requestedRowCount="3" requestedColumnCount="4"
                                      horizontalGap="0" verticalGap="0"
                                />
                    </s:layout>
                </s:List>

            </s:HGroup>

            <s:HGroup id="bottomPanel" height="100%"
                      horizontalAlign="center">
                	<s:Button label="Квесты" click="switchSlotState(QUEST_ITEMS_STATE);" />
                    <s:Button label="Оружие" click="switchSlotState(OTHER_ITEMS_STATE);" />
            </s:HGroup>
        </s:VGroup>
    </s:Group>

</s:Group>
