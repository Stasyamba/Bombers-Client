<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         creationComplete="init()">
    <fx:Declarations>
        <!-- Place non-visual elements (e.g., services, value objects) here -->
    </fx:Declarations>

    <fx:Script>
		<![CDATA[
        import components.ApplicationView

        [Bindable]
        private var timeStringView:String = "0 : 00";

        private var time:int
        private var timer:Timer = new Timer(1000)

        public function init():void {
            Context.Model.addCustomListener(ContextEvent.NEED_TO_CHANGE_MAIN_TAB, function(e:ContextEvent):void {
                if (e.data == ApplicationView.TAB_NAME_GAME) {
                    everyGameTabOpenInit()
                }
            })
            timer.addEventListener(TimerEvent.TIMER, function(e:TimerEvent):void {
                time += 1
                timeStringView = getStringTime()
            })
            everyGameTabOpenInit()
        }

        private function getStringTime():String {
            var mins:int = int(time / 60)
            var secs:int = time - 60*(int(time / 60))
            return mins.toString() + " : " + ((secs<10)?"0" + secs.toString():secs.toString());
        }

        private function stop():void {
            timer.stop()
            time = 0
            timeStringView = "0 : 00"
        }

        private function start():void {
            time = 0
            timeStringView = "0 : 00"
            timer.start()
        }

        private function everyGameTabOpenInit():void {
            Context.gameModel.gameStarted.add(function():void {
                time = 0
                timeStringView = "0 : 00"
                start()
            })
            Context.gameModel.gameEnded.add(function(p1:*, p2:*):void {
                stop()
            })
        }
        ]]>
	</fx:Script>

    <s:Rect width="95" height="30"
            radiusX="15">
        <s:fill>
            <s:SolidColor color="0x000000"/>
        </s:fill>
        <s:stroke>
            <s:SolidColorStroke color="0x3e3e3e" weight="2"/>
        </s:stroke>
        <s:filters>
            <s:BlurFilter blurX="1" blurY="2"/>
        </s:filters>
    </s:Rect>

    <s:HGroup width="100%" height="100%"
              verticalAlign="middle" horizontalAlign="center"
              paddingTop="3">
        <s:Label text="{timeStringView}"
                 fontFamily="mpbc" fontSize="28" color="0x8ed300"
                />
    </s:HGroup>

</s:Group>
